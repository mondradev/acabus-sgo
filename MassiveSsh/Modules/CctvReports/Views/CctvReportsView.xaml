<UserControl
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:converters="clr-namespace:Acabus.Converters"
    xmlns:local="clr-namespace:Acabus.Modules.CctvReports"
    xmlns:Converters="clr-namespace:Acabus.Modules.CctvReports.Converters"
    xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
    x:Class="Acabus.Modules.CctvReports.CctvReportsView"
    Name="CctvReports"
    mc:Ignorable="d" 
    MinWidth="600" MinHeight="480">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.PopupBox.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <Converters:IncidenceStatusConverter x:Key="IncidenceStatusConverter"/>
            <converters:PriorityToColorConverter x:Key="ConverterPriorityToColor"/>
            <CollectionViewSource x:Key="OpenedIncidencesCollection" Source="{Binding IncidencesOpened}">
                <CollectionViewSource.SortDescriptions >
                    <scm:SortDescription PropertyName="Priority" Direction="Descending" />
                </CollectionViewSource.SortDescriptions>
            </CollectionViewSource>
        </ResourceDictionary>
    </UserControl.Resources>
    <UserControl.DataContext>
        <local:CctvReportsViewModel/>
    </UserControl.DataContext>
    <i:Interaction.Triggers>
        <i:EventTrigger>
            <i:InvokeCommandAction Command="{Binding LoadedHandlerCommand}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="8"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid Margin="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid Margin="0" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <materialDesign:PackIcon Kind="Magnify" Width="24" Height="24" VerticalAlignment="Center" Margin="8" />
                <TextBox materialDesign:HintAssist.Hint="Buscar folio"  Margin="0,0,-0.4,-0.2" Grid.Column="1" Text="{Binding FolioToSearch, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            </Grid>
            <DataGrid Margin="0" AutoGenerateColumns="False" ItemsSource="{Binding Source={StaticResource OpenedIncidencesCollection}}" IsReadOnly="True" 
                SelectedItem="{Binding SelectedIncidence}" SelectionMode="Single" CanUserResizeRows="False" Grid.Row="1">
                <DataGrid.CommandBindings>
                    <CommandBinding Command="{x:Static ApplicationCommands.Copy}" Executed="CommandBindingExecuted" />
                    <CommandBinding Command="{x:Static ApplicationCommands.Cut}" Executed="CommandBindingExecuted" />
                </DataGrid.CommandBindings>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding CopyingRowClipboardHandlerCommand}"/>
                    </i:EventTrigger>
                    <i:EventTrigger EventName="MouseDown">
                        <i:InvokeCommandAction Command="{Binding CopyingRowClipboardHandlerCommand}"/>
                    </i:EventTrigger>
                    <i:EventTrigger EventName="MouseDoubleClick">
                        <i:InvokeCommandAction Command="{Binding ModifyIncidenceDialogCommand}"  CommandParameter="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:CctvReportsView}}}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <DataGrid.Columns>
                    <DataGridTextColumn Binding="{Binding Folio}" Header="Folio"/>
                    <DataGridTextColumn Binding="{Binding Description}" Header="Descripción de incidencia"/>
                    <DataGridTextColumn Binding="{Binding WhoReporting}" Header="Reporta"/>
                    <DataGridTextColumn Binding="{Binding Location}" Header="Estación/Ruta"/>
                    <DataGridTextColumn Binding="{Binding Device}" Header="Equipo/Vehículo"/>
                    <DataGridTextColumn Binding="{Binding StartDate, StringFormat=\{0:dd MMM yyyy hh:mm:ss tt\}}" Header="Fecha/Hora Incidencia"/>
                    <DataGridTextColumn Binding="{Binding FinishDate, StringFormat=\{0:dd MMM yyyy hh:mm:ss tt\}}" Header="Fecha/Hora Solución"/>
                    <DataGridTextColumn Binding="{Binding AssignedAttendance}" Header="Técnico asignado"/>
                    <DataGridTextColumn Binding="{Binding Status, Converter={StaticResource IncidenceStatusConverter}}" Header="Estado"/>
                    <DataGridTextColumn Binding="{Binding Observations}" Header="Observaciones"/>
                </DataGrid.Columns>
                <DataGrid.RowStyle>
                    <Style TargetType="{x:Type DataGridRow}">
                        <Setter Property="Background" Value="{Binding Priority, Converter={StaticResource ConverterPriorityToColor}}"/>
                    </Style>
                </DataGrid.RowStyle>
            </DataGrid>
        </Grid>
        <GridSplitter HorizontalAlignment="Stretch" Margin="0" Grid.Row="1" ResizeDirection="Rows"/>
        <Grid Margin="0" Grid.Row="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="8"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid Margin="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <materialDesign:PackIcon Kind="Magnify" Width="24" Height="24" VerticalAlignment="Center" Margin="8" />
                <TextBox materialDesign:HintAssist.Hint="Buscar técnico o descripción"  Margin="0" Grid.Column="1" Text="{Binding ToSearchClosed, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            </Grid>
            <DataGrid  Grid.Row="2"  Margin="0" AutoGenerateColumns="False" ItemsSource="{Binding IncidencesClosed}" IsReadOnly="True" SelectionMode="Single" CanUserResizeRows="False">
                <DataGrid.CommandBindings>
                    <CommandBinding Command="{x:Static ApplicationCommands.Copy}" Executed="CommandBindingExecuted" />
                    <CommandBinding Command="{x:Static ApplicationCommands.Cut}" Executed="CommandBindingExecuted" />
                </DataGrid.CommandBindings>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding CopyingRowClipboardHandlerCommand}"/>
                    </i:EventTrigger>
                    <i:EventTrigger EventName="MouseDown">
                        <i:InvokeCommandAction Command="{Binding CopyingRowClipboardHandlerCommand}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <DataGrid.Columns>
                    <DataGridTextColumn Binding="{Binding Folio}" Header="Folio"/>
                    <DataGridTextColumn Binding="{Binding Description}" Header="Descripción de incidencia"/>
                    <DataGridTextColumn Binding="{Binding WhoReporting}" Header="Reporta"/>
                    <DataGridTextColumn Binding="{Binding Location}" Header="Estación/Ruta"/>
                    <DataGridTextColumn Binding="{Binding Device}" Header="Equipo/Vehículo"/>
                    <DataGridTextColumn Binding="{Binding AssignedTechnician}" Header="Técnico asignado"/>
                    <DataGridTextColumn Binding="{Binding Technician}" Header="Técnico que soluciona"/>
                    <DataGridTextColumn Binding="{Binding TotalTime}" Header="Tiempo de solución"/>
                    <DataGridTextColumn Binding="{Binding StartDate, StringFormat=\{0:dd MMM yyyy hh:mm:ss tt\}}" Header="Fecha/Hora Incidencia"/>
                    <DataGridTextColumn Binding="{Binding FinishDate, StringFormat=\{0:dd MMM yyyy hh:mm:ss tt\}}" Header="Fecha/Hora Solución"/>
                    <DataGridTextColumn Binding="{Binding Observations}" Header="Observaciones"/>
                </DataGrid.Columns>
            </DataGrid>
        </Grid>
        <!-- Nueva incidencia -->
        <materialDesign:PopupBox Style="{StaticResource MaterialDesignMultiFloatingActionAccentPopupBox}"
                                 ToggleCheckedContentCommand="{Binding AddIncidenceCommand}"
                                 PlacementMode="TopAndAlignCentres"
                                 Margin="0,0,16,16"
                                 ToolTip="Agregar una nueva incidencia" Grid.Row="0" VerticalAlignment="Bottom" HorizontalAlignment="Right" PopupMode="MouseOver" Grid.RowSpan="3">
            <materialDesign:PopupBox.ToggleCheckedContent>
                <materialDesign:PackIcon Kind="NotePlus" Width="24" Height="24" />
            </materialDesign:PopupBox.ToggleCheckedContent>
            <StackPanel>
                <!-- Exportar incidencias -->
                <Button ToolTip="Exportar incidencias" Command="{x:Static materialDesign:DialogHost.OpenDialogCommand}" BorderBrush="White" Background="White">
                    <Button.CommandParameter>
                        <local:ExportDataView />
                    </Button.CommandParameter>
                    <materialDesign:PackIcon Kind="Export"  Width="24" Height="24"/>
                </Button>
                <!-- Unidades en taller o sin energía -->
                <Button ToolTip="Unidades en taller o sin energía" Command="{Binding OpenOffDutyVehiclesDialog}" BorderBrush="White" Background="White">
                    <materialDesign:PackIcon Kind="Bus" Width="24" Height="24"/>
                </Button>
                <!-- Devolución de dinero -->
                <Button ToolTip="Devolución de dinero"  Command="{Binding RefundCashDialogCommand}" BorderBrush="White" Background="White">
                    <materialDesign:PackIcon Kind="CashUsd" Width="24" Height="24"/>
                </Button>
                <!-- Cerrar incidencias -->
                <Button ToolTip="Cerrar incidencia"  Command="{Binding CloseIncidenceDialogCommand}" BorderBrush="White" Background="White">
                    <materialDesign:PackIcon Kind="CloseBox" Width="24" Height="24"/>
                </Button>
            </StackPanel>
        </materialDesign:PopupBox>
    </Grid>
</UserControl>
