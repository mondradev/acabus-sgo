<UserControl
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:local="clr-namespace:Acabus.Modules.TrunkMonitor"
    xmlns:mvvm="clr-namespace:Acabus.Utils.MVVM"
    xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:offdutyvehicles="clr-namespace:Acabus.Modules.OffDutyVehicles"
    x:Class="Acabus.Modules.TrunkMonitor.TrunkMonitorView"
    mc:Ignorable="d" 
      d:DesignHeight="300" d:DesignWidth="800">
    <UserControl.Resources>
        <local:ConverterAlertStateToColor x:Key="ConverterAlertStateToColor"/>
        <mvvm:ConverterPriorityToColor x:Key="ConverterPriorityToColor"/>
        <CollectionViewSource x:Key="Alerts" Source="{Binding Alerts}">
            <CollectionViewSource.SortDescriptions>
                <scm:SortDescription PropertyName="DateTime" Direction="Descending" />
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>
        <CollectionViewSource x:Key="BusAlerts" Source="{Binding BusDisconnected}">
            <CollectionViewSource.SortDescriptions>
                <scm:SortDescription PropertyName="Priority" Direction="Descending" />
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>
    </UserControl.Resources>
    <UserControl.DataContext>
        <local:TrunkMonitorViewModel/>
    </UserControl.DataContext>

    <i:Interaction.Triggers>
        <i:EventTrigger>
            <i:InvokeCommandAction Command="{Binding LoadedHandlerCommand, Mode=OneWay}"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="Unloaded">
            <i:InvokeCommandAction Command="{Binding UnloadedHandlerCommand, Mode=OneWay}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="56"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition Width="8"/>
            <ColumnDefinition Width="550"/>
        </Grid.ColumnDefinitions>
        <local:TrunkMonitor x:Name="Monitor" x:FieldModifier="private" Links="{Binding Links}" Margin="0,0,0,0" Grid.Row="1" />
        <GridSplitter Grid.Column="1" ShowsPreview="True" HorizontalAlignment="Stretch" Margin="0" ResizeDirection="Columns" Grid.Row="1" />
        <Grid Grid.Column="2" Margin="0" Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="143*"/>
                <RowDefinition Height="8"/>
                <RowDefinition Height="148*"/>
            </Grid.RowDefinitions>
            <DataGrid Margin="0" ItemsSource="{Binding Source={StaticResource Alerts}}" AutoGenerateColumns="False"  SelectedItem="{Binding SelectedAlert}" >
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding AlertSelectedChangeHandlerCommand, Mode=OneWay}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <DataGrid.Columns>
                    <DataGridTextColumn Binding="{Binding Device.NumeSeri, Mode=OneWay}" ClipboardContentBinding="{x:Null}" Header="Equipo"/>
                    <DataGridTextColumn Binding="{Binding Description}" ClipboardContentBinding="{x:Null}" Header="Descripción" Width="250" IsReadOnly="True" CanUserSort="False"/>
                    <DataGridTextColumn Binding="{Binding DateTime}" ClipboardContentBinding="{x:Null}" Header="Fecha/Hora" IsReadOnly="True" CanUserSort="False"/>
                </DataGrid.Columns>
                <DataGrid.RowStyle>
                    <Style TargetType="{x:Type DataGridRow}">
                        <Setter Property="Background" Value="{Binding State, Converter={StaticResource ConverterAlertStateToColor}}"/>
                    </Style>
                </DataGrid.RowStyle>
            </DataGrid>
            <GridSplitter Grid.Row="1" ShowsPreview="True" VerticalAlignment="Stretch" Margin="0" ResizeDirection="Rows" HorizontalAlignment="Stretch" />
            <DataGrid Margin="0" Grid.Row="2" ItemsSource="{Binding Source={StaticResource BusAlerts}}" AutoGenerateColumns="False">
                <DataGrid.Columns>
                    <DataGridTextColumn Binding="{Binding EconomicNumber, Mode=OneWay}" CanUserSort="False" CanUserResize="False" ClipboardContentBinding="{x:Null}" Header="No. Económico" Width="150"/>
                    <DataGridTextColumn Binding="{Binding LastSentLocation}" ClipboardContentBinding="{x:Null}" Header="Última ubicación enviada"/>
                </DataGrid.Columns>
                <DataGrid.RowStyle>
                    <Style TargetType="{x:Type DataGridRow}">
                        <Setter Property="Background" Value="{Binding Priority, Converter={StaticResource ConverterPriorityToColor}}"/>
                    </Style>
                </DataGrid.RowStyle>
            </DataGrid>
        </Grid>
        <ToolBarTray >
            <ToolBar Style="{DynamicResource MaterialDesignToolBar}" ClipToBounds="False">
                <Button ToolTip="Unidades en taller o sin energía" Command="{x:Static materialDesign:DialogHost.OpenDialogCommand}" IsEnabled="True">
                    <materialDesign:PackIcon Kind="Bus" />
                    <Button.CommandParameter>
                        <offdutyvehicles:OffDutyVehiclesView />
                    </Button.CommandParameter>
                </Button>
            </ToolBar>
        </ToolBarTray>
    </Grid>
</UserControl>
